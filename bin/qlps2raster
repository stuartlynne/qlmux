#!/bin/bash
#
# Brother QL Label printer filter
#
# Copyright (c) 2016 stuart.lynne@gmail.com
#
#
# This is a custom cups filter to allow printing of two specific sizes 
# of labels on two specific Brother label printers:
#
#   62mmx100mm (2.4"x4")    QL710W
#   102mmx152mm (4"x6")     QL1060n
#
# It does not require the Brother Linux CUPS filter.
#
# This file should be installed in:
#
#   /usr/lib/cups/filter/brother_lpdwrapper_labels
#
# There are two model ppd files available, these should be installed in:
#
#   /usr/share/cups/model/Brother/brother_102x152.ppd
#   /usr/share/cups/model/Brother/brother_62x100.ppd
#
#
# It requires that the Brother Linux LPR support be installed:
#
#   ql1060nlpr-1.0.1-0.i386.deb  
#   ql710wlpr-1.0.2-0.i386.deb
#
# The only files used from those packages are:
#
#   /opt/brother/PTouch/ql710w/lpd/rastertobrpt1
#   /opt/brother/PTouch/ql710w/inf/ImagingArea
#   /opt/brother/PTouch/ql710w/inf/paperinfql710wpt1
#   /opt/brother/PTouch/ql1060n/lpd/rastertobrpt1
#   /opt/brother/PTouch/ql1060n/inf/ImagingArea
#   /opt/brother/PTouch/ql1060n/inf/paperinfql710wpt1
#

PATH=$PATH:../bin

STDERR() {
        /bin/echo -en $* "\n" 1>&2
}


onerror() {
        echo onerror: $*
        exit 1
}
killme() {
        /bin/echo -en "\n\n$*\n\n" 1>&2
        kill -1 $$
}

trap onerror 1 2 9 15


LOGFILE="/dev/null"
DEBUG=1


TMP=${HOME:-/tmp}

LOGFILE=${TMP}/br_cupsfilter_debug_log
exec 2>$LOGFILE
date > $LOGFILE
STDERR $(date)
STDERR $0 $*
STDERR PPD: $PPD

ARG0=$(basename $0)
printenv 1>&2

set -x

# From Paper Info file - hard code width and height
# MediaSize               Wdith   Height
# 102x152/102mm x 152mm:  1164    1660
# 62x100/62mm x 100mm:    696     1109
#
# From ImagingArea File - hard code media size info
# MediaSize           Left    Top     Right   Bottom
# 102x152         :   4.32    17.28   283.68  415.68
# 62x100          :   4.32    8.4     171.36  274.56
#
case ${ARG0} in
qlps2raster_102x152)
    TARGET="ql1060n"
    MODEL="QL-1060N"
    LABELSIZE='102x152'
    WIDTH="1164"
    HEIGHT="1660"
    LEFT="4.32"
    TOP="17.28"
    RIGHT="283.68"
    BOTTOM="514.68"
    MediaSize="102x152"
    Resolution="300"
    ;;
qlps2raster_62x100)
    TARGET="ql710w"
    MODEL="QL-710W"
    LABELSIZE='62x100'
    WIDTH="696"
    HEIGHT="1109"
    LEFT="4.32"
    TOP="8.4"
    RIGHT="171.36"
    BOTTOM="274.56"
    MediaSize="62x100"
    Resolution="300"
    ;;
esac
if [ $# -eq 2 ] ; then
        NETCAT=netcat
        NETCATARGS="-q0"
        HOST=$1
        PORT=$2
else
        NETCAT=cat
        NETCATARGS=""
        HOST=""
        PORT=""
fi

# create a customized RC file that can be used by rastertobrpt1
#
#RCFILE="/${TMP}/rlabelsrc_$$"
#rcfile $TARGET $MediaSize > $RCFILE
#cp $RCFILE $RCFILE-SAVE

# This trims the first line and gets selected values.
# Can be used if we need to get things from the real rc file.
#
#eval $(sed -n -e 1d -e /^MediaSize=/p -e /^Resolution=/p < $RCFILE)


BR_PRT_PATH=/opt/brother/PTouch/$TARGET
#BRCONV=$BR_PRT_PATH/lpd/rastertobrpt1
IMAGINGAREA_FILE=$BR_PRT_PATH/inf/ImagingArea
PAPER_INF=$BR_PRT_PATH/inf/paperinf${TARGET}pt1

PSCONV_OP="$PAPER_INF  $TARGET $IMAGINGAREA_FILE"
#PSCONV_OP="$PAPER_INF $RCFILE $TARGET $IMAGINGAREA_FILE"
#BRCONV_OP="-P $TARGET -pi $PAPER_INF -rc $RCFILE -out cat" 

set +x
STDERR MediaSize: $MediaSize
STDERR Resolution: $Resolution
STDERR IMAGINGAREA_FILE: $IMAGINGAREA_FILE 
STDERR PAPER_INF: $PAPER_INF 
STDERR PSCONV_OP= $PSCONF_OP
STDERR BRCONV_OP: $BRCONV_OP
STDERR BRCONV: $BRCONV 
STDERR NETCAT: $NETCAT
STDERR NETCATARGS: $NETCATARGS
STDERR HOST: $HOST
STDERR PORT: $PORT

set -x


# Brother PPMRaw to raster converter
#BRCONV=$BR_PRT_PATH/lpd/rastertobrpt1

PNG="/tmp/${TARGET}-$$"
RAST="/tmp/${TARGET}-$$.bin"
PS="/tmp/${TARGET}-$$.ps"

# ghostscript
#GHOST_OPT="-q -dNOPROMPT -dNOPAUSE -dSAFER -sDEVICE=pnggray -sstdout=%stderr -sOutputFile=- - -c quit"
GHOST_OPT="-q -dNOPROMPT -dNOPAUSE -dSAFER -sDEVICE=pnggray -sstdout=%stderr -sOutputFile=${PNG}-%d.png - -c quit"

# create a pipeline to convert postscript on STDIN to Brother Raster and send to STDOUT
# N.B. insert ImagingBBox before Postscript on STDIN
#
# XXX Currently brother_ql_create cannot take an image PNG on STDIN, so using a temporary file.
# XXX This is due to the Image.open(file) which needs to be able to do read(), seek() and tell()
# XXX C.f https://pillow.readthedocs.io/en/4.2.x/reference/Image.html
#
# XXX Currently I have been unable to convince ghostscript to rotate the input files by 90 degrees.
# XXX So using pdftk to do it prior to ghostscript.
#
# | pdftk - cat 1-endeast output - |

(
     insert ImagingBBox
    echo "<</ImagingBBox [$LEFT $TOP $RIGHT $BOTTOM] /PageOffset [-$LEFT $TOP]>> setpagedevice" 
    # now STDIN
    tee ${PS} | cat 
) | gs -r${Resolution} -g${HEIGHT}x${WIDTH} $GHOST_OPT

function QLPRINT {

    while [ $# -gt 1 ]
    do
        qlprint -b $MODEL -p - $1
        shift
    done
    qlprint -b $MODEL -a -p - $1
}

function BROTHERQLPRINT {

    while [ $# -gt 1 ]
    do
        brother_ql_create --model ${MODEL} --label-size ${LABELSIZE} --no-cut $1 $1.rast
        cat $1.rast
        #rm $1.rast
        shift
    done
    brother_ql_create --model ${MODEL} --label-size ${LABELSIZE} $1 $1.rast
    cat $1.rast
    #rm $1.rast
}

#QLPRINT $PNG-* | tee ${RAST} | ${NETCAT} ${NETCATARGS} ${HOST} ${PORT}
BROTHERQLPRINT $PNG-* | tee ${RAST} | ${NETCAT} ${NETCATARGS} ${HOST} ${PORT}




#) | gs -r${Resolution} -g${WIDTH}x${HEIGHT} $GHOST_OPT

#brother_ql_create --model $MODEL --label-size $LABELSIZE $PNG-*

# cleanup
#rm -f $PNG

exit

